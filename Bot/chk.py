import base64
exec(base64.b64decode("aW1wb3J0IG9zCmltcG9ydCBqc29uCmZyb20gY3JlZCBpbXBvcnQgKgpmcm9tIHRlbGVib3QgaW1wb3J0IFRlbGVCb3QKZGVmIGxvYWRfZnJlZV91c2VycygpOgogICAgaWYgb3MucGF0aC5leGlzdHMoRlJFRV9VU0VSU19GSUxFKSBhbmQgb3MucGF0aC5nZXRzaXplKEZSRUVfVVNFUlNfRklMRSkgPiAwOgogICAgICAgIHdpdGggb3BlbihGUkVFX1VTRVJTX0ZJTEUsICJyIikgYXMgZmlsZToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcmV0dXJuIGpzb24ubG9hZChmaWxlKQogICAgICAgICAgICBleGNlcHQganNvbi5KU09ORGVjb2RlRXJyb3I6CiAgICAgICAgICAgICAgICByZXR1cm4ge30gICMgSWYgSlNPTiBpcyBjb3JydXB0ZWQsIHJldHVybiBhbiBlbXB0eSBkaWN0aW9uYXJ5CiAgICByZXR1cm4ge30gICMgSWYgZmlsZSBkb2Vzbid0IGV4aXN0IG9yIGlzIGVtcHR5LCByZXR1cm4gYW4gZW1wdHkgZGljdGlvbmFyeQpmcmVlX3VzZXJzPSBsb2FkX2ZyZWVfdXNlcnMoKQpkZWYgY2hrKGJvdDogVGVsZUJvdCk6CiAgICBAYm90Lm1lc3NhZ2VfaGFuZGxlcihjb21tYW5kcz1bJ2NoayddKQogICAgZGVmIGJodWZnaChtZXNzYWdlKToKICAgICAgICBpZiBzdHIobWVzc2FnZS5mcm9tX3VzZXIuaWQpIG5vdCBpbiBmcmVlX3VzZXJzOgogICAgICAgICAgICBib3QucmVwbHlfdG8obWVzc2FnZSxmIkhleSB5b3UgYXJlIG5vdCByZWdpc3RlcmVkLiBQbGVhc2UgcmVnaXN0ZXIgdXNpbmcgL3JlZ2lzdGVyIGNtZC7inIUiKQogICAgICAgICAgICByZXR1cm4gCiAgICAgICAgYSA9IGJvdC5yZXBseV90byhtZXNzYWdlLCI8Yj7ij7MgUHJvY2Vzc2luZyB5b3VyIHJlcXVlc3QuLi4gUGxlYXNlIHdhaXQuPC9iPiIscGFyc2VfbW9kZT0iSFRNTCIpCiAgICAgICAgY2hhcl9pZCA9IG1lc3NhZ2UuZnJvbV91c2VyLmlkCiAgICAgICAgY2MgPSBtZXNzYWdlLnRleHQuc3BsaXQoKVsxOl0KICAgICAgICBpZiBsZW4oY2MpICE9IDE6CiAgICAgICAgICAgIHJlc3AgPSAiIiLinYwg8J2Qj/CdkKXwnZCe8J2QmvCdkKzwnZCeIPCdkKnwnZCr8J2QqPCdkK/wnZCi8J2QnfCdkJ4g8J2QgvCdkIIg8J2QnfCdkJ7wnZCt8J2QmvCdkKLwnZCl8J2QrCDwnZCa8J2Qn/CdkK3wnZCe8J2QqyB0aGUgY29tbWFuZC4gVXNlOiA8Y29kZT4vY2hrIGNjfG1tfHl5fGN2djwvY29kZT4iIiIKICAgICAgICAgICAgYm90LmVkaXRfbWVzc2FnZV90ZXh0KAogICAgICAgICAgICAgICAgICAgIGNoYXRfaWQ9bWVzc2FnZS5jaGF0LmlkLAogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VfaWQ9YS5tZXNzYWdlX2lkLAogICAgICAgICAgICAgICAgICAgIHRleHQ9cmVzcCwKICAgICAgICAgICAgICAgICAgICBwYXJzZV9tb2RlPSJIVE1MIgogICAgICAgICAgICAgICAgKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGlmIG9wKG1lc3NhZ2UuZnJvbV91c2VyLmlkKSA9PUZhbHNlOgogICAgICAgICAgICAgICAgYm90LmVkaXRfbWVzc2FnZV90ZXh0KAogICAgICAgICAgICAgICAgICAgIGNoYXRfaWQ9bWVzc2FnZS5jaGF0LmlkLAogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VfaWQ9YS5tZXNzYWdlX2lkLAogICAgICAgICAgICAgICAgICAgIHRleHQ9IllvdSBkb250IGhhdmUgZW5vdWdoIGNyZWRpdCIsCiAgICAgICAgICAgICAgICAgICAgcGFyc2VfbW9kZT0iSFRNTCIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGNjID0gbWVzc2FnZS50ZXh0LnNwbGl0KCkKICAgICAgICAgICAgICAgIGNjID0gY2NbMV0KICAgICAgICAgICAgICAgIGNhID0gTm9uZQogICAgICAgICAgICAgICAgc3RhcnRfdGltZSA9IHRpbWUucGVyZl9jb3VudGVyKCkKICAgICAgICAgICAgICAgIGxhc3QgPSBUZWxlKGNjKQogICAgICAgICAgICAgICAgbGFzdCA9IHN0cihsYXN0KQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBkYXRhID0gZ2V0X2JpbihjYykKICAgICAgICAgICAgICAgIGlmIGRhdGEgaXMgTm9uZToKICAgICAgICAgICAgICAgICAgICBkYXRhID0ge30KICAgICAgICAgICAgICAgIGJhbmsgPSBkYXRhWyJiYW5rIl0KICAgICAgICAgICAgICAgIGNvdW50cnkgPSBkYXRhLmdldCgiY291bnRyeSIsICJOL0EiKQogICAgICAgICAgICAgICAgc2NoZW1lID0gZGF0YS5nZXQoInNjaGVtZSIsICJOL0EiKQogICAgICAgICAgICAgICAgdHlwZV8gPSBkYXRhLmdldCgidHlwZSIsICJOL0EiKQogICAgICAgICAgICAgICAgbGV2ZWwgPSBkYXRhLmdldCgibGV2ZWwiLCAiTi9BIikKICAgICAgICAgICAgICAgIGJpbl9udW1iZXIgPSBjY1s6Nl0KICAgICAgICAgICAgICAgIGlmIGJpbl9udW1iZXJbMF0gPT0gNDoKICAgICAgICAgICAgICAgICAgICBjYSA9ICJWaXNhIgogICAgICAgICAgICAgICAgaWYgYmluX251bWJlclswXSA9PSA1OgogICAgICAgICAgICAgICAgICAgIGNhID0gIk1hc3RlckNhcmQiCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgIGVuZF90aW1lID0gdGltZS5wZXJmX2NvdW50ZXIoKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBleGVjdXRpb25fdGltZSA9IGVuZF90aW1lIC0gc3RhcnRfdGltZQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmICdZb3VyIGNhcmQgd2FzIGRlY2xpbmVkLicgaW4gbGFzdDoKICAgICAgICAgICAgICAgICAgICBsYXN0ID0gJ1lvdXIgY2FyZCB3YXMgZGVjbGluZWQuJwogICAgICAgICAgICAgICAgaWYgJ3N1Y2Nlc3MnIGluIGxhc3Q6CiAgICAgICAgICAgICAgICAgICAgbGFzdCA9ICdBUFBST1ZFRCDinIUnCiAgICAgICAgICAgICAgICBpZiAnQ2FyZCBFeHBpcmVkJyBpbiBsYXN0OgogICAgICAgICAgICAgICAgICAgIGxhc3QgPSAnWW91ciBDYXJkIEV4cGlyZWQnCiAgICAgICAgICAgICAgICBpZiAnTGl2ZScgaW4gbGFzdDoKICAgICAgICAgICAgICAgICAgICBsYXN0ID0gJ0FQUFJPVkVEIOKchScKICAgICAgICAgICAgICAgIGlmICdVbmFibGUgdG8gYXV0aGVudGljYXRlJyBpbiBsYXN0OgogICAgICAgICAgICAgICAgICAgIGxhc3QgPSAnRGVjbGluZWQgLSBDYWxsIElzc3VlcicKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiAiVW5hYmxlIHRvIGF1dGhlbnRpY2F0ZSIgaW4gbGFzdCBvciAiQ2FyZCBFeHBpcmVkIiBvciAiWW91ciBjYXJkIHdhcyBkZWNsaW5lZC4iOgogICAgICAgICAgICAgICAgICAgIHJlc3AgPSBmIiIiIPCdkILwnZCh8J2QnvCdkJzwnZCk8J2QnvCdkJ0g8J2QgvCdkJrwnZCr8J2QnSDwn5KzCiAgICDilI/ilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHijZ8KICAgIOKUg/CdkILwnZCCIDxjb2RlPntjY308L2NvZGU+4pSX4pSB4pSB4pSB4pSB4pSB4pSB4pSB4oqbCiAgICDwnZCG8J2QmvCdkK3wnZCe8J2QsPCdkJrwnZCyOiAgPGI+U1RSSVBFIEFVVEg8L2I+IAogICAg8J2QkfCdkJ7wnZCs8J2QqfCdkKjwnZCn8J2QrPCdkJ46ICB7bGFzdH0gCiAgICAgICAgICAgIAogICAg8J2QiPCdkKfwnZCf8J2QqDoge2Jpbl9udW1iZXJ9IHtjYX0KICAgIPCdkILwnZCo8J2QrvCdkKfwnZCt8J2Qq/CdkLI6IHtjb3VudHJ5fQogICAg8J2QgfCdkJrwnZCn8J2QpDoge2Jhbmt9CiAgICAgICAgICAgIAogICAg8J2Qk/CdkKLwnZCm8J2Qnjoge2V4ZWN1dGlvbl90aW1lOi4yZn0g8J2QrPCdkJ7wnZCc8J2QqPCdkKfwnZCdCiAgICA8Yj5SZXEgYnkgOjwvYj4gQHttZXNzYWdlLmZyb21fdXNlci51c2VybmFtZX0iIiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjYm90LnNlbmRfbWVzc2FnZShjaGF0X2lkLGYiQ2FyZCA6IDxjb2RlPntjY308L2NvZGU+XG5TdGF0dXMgOiBEZWNsaW5l4p2MXG5UaW1lIHRha2VuIDoge2V4ZWN1dGlvbl90aW1lOi4yZn1zIixwYXJzZV9tb2RlPSJIVE1MIikKICAgICAgICAgICAgICAgICAgICBib3QuZWRpdF9tZXNzYWdlX3RleHQoY2hhdF9pZD1tZXNzYWdlLmNoYXQuaWQsbWVzc2FnZV9pZD1hLm1lc3NhZ2VfaWQsdGV4dD1yZXNwLHBhcnNlX21vZGU9IkhUTUwiKQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVsaWYgJ3N1Y2NlZWRlZCcgaW4gbGFzdCBvciAnTGl2ZScgaW4gbGFzdDoKICAgICAgICAgICAgICAgICAgICByZXNwID0gZiIiIiDwnZCC8J2QofCdkJ7wnZCc8J2QpPCdkJ7wnZCdIPCdkILwnZCa8J2Qq/CdkJ0g8J+SswogICAg4pSP4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4o2fCiAgICDilIPwnZCC8J2QgiA8Y29kZT57Y2N9PC9jb2RlPuKUl+KUgeKUgeKUgeKUgeKUgeKUgeKUgeKKmwogICAg8J2QhvCdkJrwnZCt8J2QnvCdkLDwnZCa8J2QsjogIDxiPlNUUklQRSBBVVRIPC9iPiAKICAgIPCdkJHwnZCe8J2QrPCdkKnwnZCo8J2Qp/CdkKzwnZCeOiAgQVBQUk9WRUQg4pyFIAogICAgICAgICAgICAKICAgIPCdkIjwnZCn8J2Qn/CdkKg6IHtiaW5fbnVtYmVyfSB7Y2F9CiAgICDwnZCC8J2QqPCdkK7wnZCn8J2QrfCdkKvwnZCyOiB7Y291bnRyeX0KICAgIPCdkIHwnZCa8J2Qp/CdkKQ6IHtiYW5rfQogICAgICAgICAgICAKICAgIPCdkJPwnZCi8J2QpvCdkJ46IHtleGVjdXRpb25fdGltZTouMmZ9IPCdkKzwnZCe8J2QnPCdkKjwnZCn8J2QnQogICAgPGI+UmVxIGJ5IDo8L2I+IEB7bWVzc2FnZS5mcm9tX3VzZXIudXNlcm5hbWV9IiIiCiAgICAgICAgICAgICAgICAgICAgYm90LnJlcGx5X3RvKG1lc3NhZ2UsdGV4dD1yZXNwLHBhcnNlX21vZGU9IkhUTUwiKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICByZXNwID0gZiIiIiDwnZCC8J2QofCdkJ7wnZCc8J2QpPCdkJ7wnZCdIPCdkILwnZCa8J2Qq/CdkJ0g8J+SswogICAgIOKUj+KUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKNnwogICAg4pSD8J2QgvCdkIIgPGNvZGU+e2NjfTwvY29kZT7ilJfilIHilIHilIHilIHilIHilIHilIHiipsKICAgIPCdkIbwnZCa8J2QrfCdkJ7wnZCw8J2QmvCdkLI6ICA8Yj5TVFJJUEUgQVVUSDwvYj4gIAogICAg8J2QkfCdkJ7wnZCs8J2QqfCdkKjwnZCn8J2QrPCdkJ46ICB7bGFzdH0KICAgICAgICAgICAgCiAgICDwnZCI8J2Qp/CdkJ/wnZCoOiB7YmluX251bWJlcn0ge2NhfQogICAg8J2QgvCdkKjwnZCu8J2Qp/CdkK3wnZCr8J2Qsjoge2NvdW50cnl9CiAgICDwnZCB8J2QmvCdkKfwnZCkOiB7YmFua30KICAgICAgICAgICAgCiAgICDwnZCT8J2QovCdkKbwnZCeOiB7ZXhlY3V0aW9uX3RpbWU6LjJmfSDwnZCs8J2QnvCdkJzwnZCo8J2Qp/CdkJ0KICAgIDxiPlJlcSBieSA6PC9iPiBAe21lc3NhZ2UuZnJvbV91c2VyLnVzZXJuYW1lfSIiIgogICAgICAgICAgICAgICAgICAgIGJvdC5lZGl0X21lc3NhZ2VfdGV4dChjaGF0X2lkPW1lc3NhZ2UuY2hhdC5pZCxtZXNzYWdlX2lkPWEubWVzc2FnZV9pZCx0ZXh0PXJlc3AscGFyc2VfbW9kZT0iSFRNTCIpCiAgICAgICAgICAgICAgICA=").decode())